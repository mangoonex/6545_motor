C51 COMPILER V9.03   COM                                                                   11/01/2015 20:29:48 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE COM
OBJECT MODULE PLACED IN com.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\com.c LARGE OPTIMIZE(9,SIZE) REGFILE(.\ce43_ex.abs.ORC) BROWSE INCDI
                    -R(.\) DEBUG OBJECTEXTEND PRINT(.\com.lst) OBJECT(com.obj)

line level    source

   1          #include "CONFIG.H"
   2          #include "options.h"            // Define the IC, CE code and options.
   3          #include <string.h>
   4          #include <math.h>
   5          #include "energy.h"
              //**************************通讯*************************
              
              uint8_t         rx_count=0;     //rx counter
              uint8_t         tx_count=0;     //tx counter
              uint8_t         *p_rx_buf;
              uint8_t         *p_tx_buf;
              uint8_t         NetAddress; //地址
              bool            Is_Rx_Ok;
              RECEIVEFRAME xdata SerialBuffer;//帧格式
              uint8_t ReceFrameStar; //开始接收帧标识
              uint8_t ReceDelayCnt;   //接收超时时间  30*10ms=300ms
              uint8_t ReceDelayOut;   //接收超时标识
              #define REC_DELAY_MAX                                   30      //超时时间 30*10ms=300ms
              #define CMD_READ_VOLTAGE                                0x30    //读取电压
              #define CMD_READ_CURRENT                                0x31
              #define CMD_READ_POWER                                  0x32
              
              bool Serial_Buf_Process(void);
              
              void Init_Serial(void)
              {
                      //added for test
                      TI=0;
                      RI=0;
              
                      Is_Rx_Ok =FALSE;
                      p_rx_buf = &SerialBuffer.framehead;
                      rx_count = 0;
                      tx_count = 0;
                      ReceFrameStar = 0;
                      ReceDelayCnt = REC_DELAY_MAX;
                      ReceDelayOut = 0;
              
              }
              //************************串口处理程序**********************
              
              void Serial_Process(void)
              {
                      if (Is_Rx_Ok)
                      {
                              if(Serial_Buf_Process())
                              {
                                      tx_count=SerialBuffer.length + 4;
                                      p_tx_buf= &SerialBuffer.command;
                                      S0BUF = 0x68;
                                      S0CON |= 0x08;
                              }
                              Is_Rx_Ok=FALSE;
                      }
C51 COMPILER V9.03   COM                                                                   11/01/2015 20:29:48 PAGE 2   

                      else
                      {
              //              if((ticks > 120) && (Rstate == OFF))
                              {
              //                      WDT_Awaken();
              //                      SaveBeforeRST(0);
              //                      Soft_Reset();
                              }
                      }
              
              }
              bool Serial_Buf_Process(void)
              {
                      uint8_t checksum;
                      uint8_t loop;
              
                      bool comtaskadd ;
                      uint16_t  crccheck;
              //      U16x  crccheck;
                      uint8_t *p;
              
                      uint32_t temp1;
              
                      comtaskadd = 0;
              
                      if (SerialBuffer.address == NetAddress || SerialBuffer.address == 0xfe || SerialBuffer.address == 0xff)
                      {
                              p = &SerialBuffer.serialData[0];
                              switch (SerialBuffer.command)//what control code
                              {
                                      case CMD_READ_VOLTAGE:
                                              {
                                              //voltage of a b c
                                              for(loop = 0; loop < 3; loop++)
                                              {
                                                      *p++ = g_V_Temp[loop];
                                                      *p++ = g_V_Temp[loop]>>8;
                                              }
              
                                              //line frequence
                                                      //*p++ = g_Line_freq;
              
                                              //temperature
                                                      //*p++ = g_Chip_Temp;
              
                                                      comtaskadd = 1;
              
                                              break;
              
                                              }
                                      case CMD_READ_CURRENT:
                                              {
              
                                              for(loop = 0; loop < 3; loop++)
                                              {
                                                      *p ++ = g_I_Temp[loop];
                                                      *p ++ = g_I_Temp[loop]>>8;
                                                      *p ++ = g_I_Temp[loop]>>16;
                                                      *p ++ = g_I_Temp[loop]>>24;
                                              }
                                                      comtaskadd = 1;
                                                      break;
C51 COMPILER V9.03   COM                                                                   11/01/2015 20:29:48 PAGE 3   

                                              }
              
              
                                      case CMD_READ_POWER:                                                                                    // Read 3 phases Power
                                              {
                                              //有功功率
                                              for(loop = 0; loop < 3; loop++)
                                              {
                                                      /*
                                                      *p ++ =  PW_T[loop];
                                                      *p ++ =  PW_T[loop]>>8;
                                                      *p ++ =  PW_T[loop]>>16;
                                                      *p ++ =  PW_T[loop]>>24;
                                                      */
                                                      temp1 = g_PW_T[loop];
                                                      //temp1 = 3+loop;
                                                      *p ++ =  temp1;
                                                      *p ++ =  temp1>>8;
                                                      *p ++ =  temp1>>16;
                                                      *p ++ =  temp1>>24;
              
              
                                              }
                                              //无功功率
                                              for(loop = 0; loop < 3; loop++)
                                              {
                                                      *p ++ =  g_PVar_T[loop];
                                                      *p ++ =  g_PVar_T[loop]>>8;
                                                      *p ++ =  g_PVar_T[loop]>>16;
                                                      *p ++ =  g_PVar_T[loop]>>24;
                                              }
              
                                                      comtaskadd = 1;
                                                      break;
              
                                              }
                              }
                      }
                      if(comtaskadd)
                              {
                                      //if(READPOWER == SerialBuffer.command)
                                      //      memset_x(SerialBuffer.serialData,  0, 10);
              
                                      SerialBuffer.command = (SerialBuffer.command | 0x80);
                                      SerialBuffer.length = p - SerialBuffer.serialData;
                                      checksum = 0x00;
                                      checksum += SerialBuffer.framehead;
                                      checksum += SerialBuffer.address;
                                      checksum += SerialBuffer.command;
                                      checksum += SerialBuffer.length;
              
                                      if(SerialBuffer.length != 0)
                                      {
                                              for(loop = 0; loop < SerialBuffer.length; loop ++)
                                                      checksum += SerialBuffer.serialData[loop];
                                      }
              
                                      SerialBuffer.checksum = checksum;
                                      SerialBuffer.frameend = 0x16;
                              }
              
                              return comtaskadd;
C51 COMPILER V9.03   COM                                                                   11/01/2015 20:29:48 PAGE 4   

              }
              
              //*****************串口中断服务程序**********************
              
              #pragma NOAREGS
              void uart0_int (void) small interrupt ES0_IV using 1
              {
                      uint8i_t  temp,i;
              
                      if(RI)
                      {
                              RI=0;
              
                              if(Is_Rx_Ok) return;//已经接收完1包，还没处理
              
                              if(rx_count > (RX_BUF_SIZE + 5))//缓存区溢出
                              {
                                      Init_Serial();
                                      return;
                              }
              
                              p_rx_buf[rx_count] = S0BUF;
              
              
                              switch(rx_count)
                              {
                                      case 0:  //找68开头
                                              if(p_rx_buf[0] == 0x68)
                                              {
                                                      rx_count=1;
                                                      ReceFrameStar = 1;//开始计算超时
                                                      ReceDelayCnt = REC_DELAY_MAX;
                                              }
                                              break;
                                      case 1:  //判断地址 真实地址,广播地址,主控通讯专用地址
                                              if((p_rx_buf[1]==NetAddress) || (p_rx_buf[1] == 0xff) || (p_rx_buf[1] == 0xfe))
                                                      rx_count=2;
                                              break;
                                      case 2: //命令字
                                              rx_count=3;
                                              break;
                                      case 3://长度字节
                                              if(p_rx_buf[3] == 0)//长度为0，准备接收校验和16
                                              {
                                                      rx_count = 4 + RX_BUF_SIZE;
                                              }
                                              else
                                                      rx_count = 4;
                                              break;
              
                                      case (RX_BUF_SIZE+4):
                                              rx_count=RX_BUF_SIZE+5;
                                              break;
              
                                      case (RX_BUF_SIZE+5):
                                              if(0x16 == p_rx_buf[rx_count])
                                              {
                                                      temp=0;
                                                      for(i=0; i < (p_rx_buf[3] + 4); i++)
                                                              temp += p_rx_buf[i];    //checksum
              
                                                      if (p_rx_buf[(RX_BUF_SIZE + 4)] == temp)
C51 COMPILER V9.03   COM                                                                   11/01/2015 20:29:48 PAGE 5   

                                                      {
                                                              Is_Rx_Ok=TRUE;
                                                              ReceFrameStar = 0;
                                                              ReceDelayCnt = REC_DELAY_MAX;
                                                              ReceDelayOut = 0;
                                                      }
                                                      else
                                                              Init_Serial();//错误校验码，清除接收
                                              }
                                              else
                                                      Init_Serial();//错误结束符，清除接收
                                              break;
              
                                      default:
                                              if((rx_count>=4) && (rx_count < (p_rx_buf[3] + 3)))
                                              {
                                                      rx_count++;
                                              }
                                              else if(rx_count == (p_rx_buf[3] + 3))
                                              {
                                                      rx_count = 4 + RX_BUF_SIZE;//准备接收校验
                                              }
              
                                              break;
                              }
                      }
                      if(TI)
                      {
                              TI=0;
              
                              if (tx_count > 0)//send next byte if necessary
                              {
                                      tx_count = tx_count - 1;
                                      ACC = *p_tx_buf;
                                      if(PSW & 0x01)
                                              S0CON |= 0x08;
                                      else
                                              S0CON &= 0xf7;
              
                                      S0BUF = *p_tx_buf;
                                      if(tx_count <= 2)
                                      {
                                              if(tx_count == 2)//发送校验码
                                                      p_tx_buf = &SerialBuffer.checksum ;
                                              else//发送帧尾
                                                      p_tx_buf = &SerialBuffer.frameend;
                                      }
                                      else
                                              p_tx_buf = p_tx_buf + 1;
                              }
                              else
                              {
                                      Init_Serial();
                              }
                      }
              }
              //****************定时器0中断服务程序**********************
              //每10ms中断一次
              void timer0_isr (void) interrupt TMR0_IV
              {
                      if( ReceFrameStar == 1)
                      {
C51 COMPILER V9.03   COM                                                                   11/01/2015 20:29:48 PAGE 6   

                              if( ReceDelayCnt > 0)
                              {
                                      if( --ReceDelayCnt == 0 )
                                              ReceDelayOut = 1;
                              }
              
                      }
              }
*** WARNING C316 IN LINE 310 OF source\com.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
